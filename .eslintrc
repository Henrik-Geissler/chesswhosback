{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react-hooks",
    "react",
    "eslint-plugin-import",
    "eslint-plugin-promise",
    "@typescript-eslint",
    "alphabetize",
    "notice",
    "toplevel",
    "security",
    "optimize-regex",
    "sort-destructure-keys",
    "no-unsanitized",
    "no-secrets",
    "sort-class-members",
    "simple-import-sort",
    "typescript-sort-keys",
    "xss",
    "woke",
    "array-func",
    "sonarjs",
    "json-format",
    "filenames",
    "node",
    "babel",
    "sort-keys-fix",
    "better-styled-components",
    "immutable",
    "react-native",
    "unused-imports",
    //"unicorn",
    "jest"
  ],
  "extends": [
    "@react-native-community",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:eslint-plugin-import/recommended",
    "plugin:eslint-plugin-promise/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "airbnb-typescript",
    "plugin:security/recommended",
    "plugin:sonarjs/recommended",
    "plugin:array-func/all",
    "plugin:eslint-comments/recommended",
    "plugin:compat/recommended",
    "plugin:react-native/all",
    "standard",
    //"canonical",
    //"canonical/jest",
    //"canonical/node",
    //"canonical/react",
    //"canonical/typescript",
    "plugin:typescript-sort-keys/recommended"
    //"plugin:prettier/recommended"
  ],
  "env": { "jest": true, "es6": true, "browser": true, "jest/globals": true },
  "settings": {
    "react": {
      "createClass": "createReactClass",
      "version": "detect"
    },
    "json/sort-package-json": "pro",
    "json/ignore-files": ["**/package-lock.json"],
    "json/json-with-comments-files": ["**/tsconfig.json", ".vscode/**"],
    "import/ignore": ["react-native"]
  },
  "rules": {
    // * Security
    "no-script-url": "error",
    "no-eval": "error",
    "no-implied-eval": "error",
    "xss/no-mixed-html": "error",
    "xss/no-location-href-assign": "error",
    "no-unsanitized/method": "error",
    "no-unsanitized/property": "error",
    "no-secrets/no-secrets": [
      "error",
      { "ignoreIdentifiers": ["BASE64", "base64"] }
    ],

    // * TOOLS
    "notice/notice": [
      "error",
      {
        "mustMatch": "Copyright \\(c\\)",
        "templateFile": ".vscode/copyright.ts"
      }
    ],
    "alphabetize/_": "error",
    "woke/all": "error",

    // * Possible Problems
    "array-callback-return": "error",
    "constructor-super": "error",
    "for-direction": "error",
    "getter-return": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "always"],
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-constructor-return": "error",
    "no-control-regex": "error",
    "no-debugger": "warn",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-ex-assign": "error",
    "no-fallthrough": [
      "error"
      //{ "allowEmptyCase": true, "commentPattern": "!*fall*through" }
    ],
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-inner-declarations": ["error", "both"],
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    ///"no-new-native-nonconstructor": "error",
    "no-new-symbol": "error",
    "no-obj-calls": "error",
    "no-promise-executor-return": "error",
    "no-prototype-builtins": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-setter-return": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-undef": ["error", { "typeof": false }],
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unreachable": "warn",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": ["error", { "enforceForOrderingRelations": true }],
    "no-unsafe-optional-chaining": [
      "error",
      { "disallowArithmeticOperators": true }
    ],
    "no-unused-private-class-members": "warn",
    "no-unused-vars": [
      "warn",
      {
        "args": "all",
        "argsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "no-useless-backreference": "error",
    "require-atomic-updates": "error",
    "use-isnan": ["error", { "enforceForSwitchCase": true }],
    "valid-typeof": ["error", { "requireStringLiterals": true }],
    // * Suggestions
    "accessor-pairs": "error", //hm
    "arrow-body-style": "error",
    "block-scoped-var": "error",
    "camelcase": "error",
    "class-methods-use-this": "warn",
    "complexity": ["warn", { "max": 5 }],
    "consistent-return": "error",
    "consistent-this": "error",
    "curly": ["error", "multi"],
    "default-case": ["warn", { "commentPattern": "^! no default" }],
    "default-case-last": "error",
    "default-param-last": "error",
    "dot-notation": ["error", { "allowKeywords": false }],
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "func-name-matching": "error", //hm
    "func-names": ["error", "never", { "generators": "never" }],
    "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
    "grouped-accessor-pairs": ["error", "getBeforeSet"],
    "guard-for-in": "warn",
    "id-denylist": ["warn", "err", "callback", "obj"],
    "id-length": [
      "warn",
      {
        "min": 0,
        "max": 18,
        "exceptions": ["x", "y", "z", "i", "v", "t", "d", "id"]
      }
    ],
    "id-match": [
      "warn",
      "^[a-z,A-Z]+([A-Z][a-z]+)*$",
      {
        "properties": true,
        "classFields": true,
        "ignoreDestructuring": false,
        "onlyDeclarations": true
      }
    ], //hm
    /*"logical-assignment-operators": [
      "error",
      "always",
      { "enforceForIfStatements": true }
    ],*/
    "max-classes-per-file": ["warn", 1],
    "max-depth": ["warn", 2],
    "max-lines": [
      "warn",
      { "max": 100, "skipBlankLines": true, "skipComments": true }
    ],
    "max-lines-per-function": [
      "warn",
      { "max": 60, "skipBlankLines": true, "skipComments": true, "IIFEs": true }
    ],
    "max-nested-callbacks": ["warn", 3],
    "max-params": ["warn", 5],
    "max-statements": ["warn", 10, { "ignoreTopLevelFunctions": true }],
    "multiline-comment-style": ["error", "starred-block"],
    "new-cap": "warn", //hm
    "no-alert": "warn",
    "no-array-constructor": "error",
    "no-bitwise": "warn",
    "no-caller": "error",
    "no-case-declarations": "warn",
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-div-regex": "error",
    "no-else-return": ["error", { "allowElseIf": false }],
    "no-empty": "warn",
    "no-empty-function": "warn",
    //"no-empty-static-block": "warn",
    "no-eq-null": "warn",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": ["error", { "enforceForLogicalOperands": true }],
    "no-extra-label": "error",
    "no-floating-decimal": "error",
    "no-global-assign": "warn",
    "no-implicit-globals": ["warn", { "lexicalBindings": true }],
    "no-invalid-this": "warn",
    "no-iterator": "error",
    "no-label-var": "warn",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    /*
    "no-magic-numbers": [
      "warn",
      {
        "ignore": [0, 1],
        "ignoreClassFieldInitialValues": true,
        "enforceConst": true
      }
    ],*/
    "no-negated-condition": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": ["error", { "props": true }],
    "no-proto": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-exports": [
      "error",
      {
        "restrictedNamedExports": []
      }
    ],
    "no-restricted-globals": [
      "error",
      {
        "name": "event",
        "message": "Use local parameter instead."
      }
    ],
    "no-restricted-imports": ["error", { "paths": [] }],

    "no-restricted-syntax": [
      "error",
      {
        "selector": "CallExpression[callee.name='setTimeout'][arguments.length!=2]",
        "message": "setTimeout must always be invoked with two arguments."
      }
    ],
    "no-return-assign": ["error", "always"],
    "no-return-await": "warn",
    "no-sequences": "error",
    "no-shadow": ["warn", { "builtinGlobals": false, "hoist": "all" }],
    "no-shadow-restricted-names": "error",
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-underscore-dangle": "error",
    "no-unneeded-ternary": ["error", { "defaultAssignment": false }],
    "no-unused-expressions": ["error", { "enforceForJSX": true }],
    "no-unused-labels": "error",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-computed-key": ["error", { "enforceForClassMembers": true }],
    "no-useless-concat": "error",
    "no-useless-constructor": "warn",
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": "warn",
    "no-with": "error",
    "object-shorthand": "error",
    "one-var": ["error", "never"],
    "one-var-declaration-per-line": ["error", "initializations"],
    "operator-assignment": ["error", "always"],
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-exponentiation-operator": "error",
    "prefer-named-capture-group": "error",
    "prefer-numeric-literals": "error",
    "prefer-object-has-own": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-regex-literals": ["error", { "disallowRedundantWrapping": true }],
    "prefer-rest-params": "warn",
    "prefer-spread": "error",
    "prefer-template": "error",
    "quote-props": ["error", "as-needed", { "keywords": true }],
    "radix": ["error", "as-needed"],
    "require-await": "warn",
    "require-unicode-regexp": "warn",
    "require-yield": "warn",
    "symbol-description": "warn",
    "vars-on-top": "warn",
    "yoda": "error",

    // * ANTI PATTEN
    /* "node/no-missing-import": [
      "error",
      {
        "tryExtensions": [".ts", ".tsx", ".js", ".json", ".node"]
      }
    ],*/
    //"unicorn/prevent-abbreviations": "error",
    //"unicorn/prefer-negative-index": "error",
    "immutable/no-let": "warn",
    "immutable/no-mutation": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "promise/prefer-await-to-then": "error",
    "eslint-comments/disable-enable-pair": "off",
    "eslint-comments/no-unused-disable": "warn",
    "eslint-comments/no-unlimited-disable": "warn",
    "unused-imports/no-unused-imports": "error",

    // * FORMAT CONSISTENCY
    "spaced-comment": ["error", "always", { "exceptions": ["-", "+", "*"] }],
    "no-multiple-empty-lines": "error",
    "unicode-bom": "error",
    "wrap-iife": ["error", "inside"],
    "optimize-regex/optimize-regex": "error",
    "toplevel/no-toplevel-var": "error",
    "toplevel/no-toplevel-let": "error",
    "toplevel/no-toplevel-side-effect": "warn",
    //"unicorn/prefer-spread": "error",
    "import/no-unassigned-import": [
      "warn",
      { "allow": ["reflect-metadata", "dotenv-safe/config"] }
    ],
    "filenames/match-regex": ["warn", "^[A-Z][a-zA-Z.]+$"],
    "filenames/match-exported": "error",
    "filenames/no-index": "warn",
    "padding-line-between-statements": [
      "error",
      { "blankLine": "never", "prev": "*", "next": "*" },
      { "blankLine": "any", "prev": "import", "next": "*" },
      { "blankLine": "any", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": "*", "next": "export" },
      { "blankLine": "any", "prev": "export", "next": "export" }
    ],
    "sort-class-members/sort-class-members": [
      2,
      {
        "order": [
          "[static-properties]",
          "[static-methods]",
          "[properties]",
          "[conventional-private-properties]",
          "constructor",
          "[methods]",
          "[conventional-private-methods]"
        ],
        "accessorPairPositioning": "getThenSet"
      }
    ],
    "sort-destructure-keys/sort-destructure-keys": [
      "error",
      { "caseSensitive": false }
    ],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "sort-imports": "off",
    "import/first": "error",
    "import/order": "off",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "import/no-anonymous-default-export": "error",
    //"babel/object-curly-spacing": ["error", "always"],
    "sort-keys": [
      "error",
      "asc",
      {
        "caseSensitive": true,
        "natural": true
        // "allowLineSeparatedGroups": true
      }
    ],
    "sort-keys-fix/sort-keys-fix": "error",
    "sort-vars": "error",
    "react/destructuring-assignment": ["error", "always"],
    "react/state-in-constructor": ["error", "never"],
    "react/jsx-sort-props": ["error", { "reservedFirst": true }],

    // * WIP
    // TODO check unicorn rules
    // TODO check commented rules
    // TODO check react, reactnative rules
    "react/boolean-prop-naming": "error",
    "react/display-name": "error",
    "react/forbid-dom-props": "error",
    "react/forbid-elements": "error",
    "react/forbid-prop-types": "error",
    "react/function-component-definition": [
      "error",
      { "namedComponents": "arrow-function" }
    ],
    "react/jsx-child-element-spacing": "error",
    "react/jsx-closing-bracket-location": "error",
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": "error",
    "react/jsx-filename-extension": "error",
    "react/jsx-max-depth": "off",
    "react/jsx-no-script-url": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-props-no-spreading": "error",
    "react/jsx-tag-spacing": "error",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-wrap-multilines": "error",
    "react/no-adjacent-inline-elements": "error",
    "react/prefer-read-only-props": "error",
    "react/forbid-foreign-prop-types": "error",
    "react/require-optimization": "error",
    "better-styled-components/sort-declarations-alphabetically": "error",

    // * DEACTIVATE UNUSED
    "strict": "off",
    "init-declarations": "off",
    "no-continue": "off",
    "no-delete-var": "off",
    "no-confusing-arrow": "off",
    "no-labels": "off",
    "no-inline-comments": "off",
    "no-implicit-coercion": "off",
    "no-mixed-operators": "off",
    "no-nested-ternary": "off",
    "no-multi-str": "off",
    "no-plusplus": "off",
    "no-ternary": "off",
    "no-undefined": "off",
    "prefer-destructuring": "off",
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "no-multi-assign": "off",
    "react/jsx-no-literals": "off",
    "import/prefer-default-export": "off", //never?
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "no-use-before-define": [
      "off",
      {
        "functions": true,
        "classes": false,
        "variables": true,
        "allowNamedExports": false
      }
    ],
    "react-native/no-color-literals": "off",
    "react/forbid-component-props": "off",
    "security/detect-object-injection": "off",
    "capitalized-comments": ["off", "always", { "ignoreInlineComments": true }],

    // * DEACTIVATE DUPLICATES
    "@typescript-eslint/no-unused-expressions": "off",
    "immutable/no-this": "off",
    "@typescript-eslint/no-unused-vars": ["off", { "varsIgnorePattern": "_" }],
    "@typescript-eslint/no-extra-semi": "off",
    "@typescript-eslint/indent": "off",
    "no-duplicate-imports": ["off", { "includeExports": true }],
    "@typescript-eslint/no-redeclare": "off",
    "@typescript-eslint/no-useless-constructor": "off",

    // * DEACTIVATE BECAUSE PRETTIER DOES THIS
    "prettier/prettier": "off",
    "@typescript-eslint/keyword-spacing": "off",
    "@typescript-eslint/space-infix-ops": "off",
    "@typescript-eslint/object-curly-spacing": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/comma-spacing": "off",
    "react/jsx-one-expression-per-line": "off",
    "canonical/destructuring-property-newline": "off",
    "no-extra-semi": "off",
    "array-bracket-newline": "off",
    "array-bracket-spacing": "off",
    "array-element-newline": "off",
    "arrow-parens": "off",
    "arrow-spacing": "off",
    "block-spacing": "off",
    "brace-style": "off",
    "comma-dangle": "off",
    "comma-spacing": "off",
    "comma-style": "off",
    "computed-property-spacing": "off",
    "dot-location": "off",
    "eol-last": "off",
    "func-call-spacing": "off",
    "function-call-argument-newline": "off",
    "function-paren-newline": "off",
    "generator-star-spacing": "off",
    "implicit-arrow-linebreak": "off",
    "indent": "off",
    "jsx-quotes": "off",
    "key-spacing": "off",
    "keyword-spacing": "off",
    "line-comment-position": "off",
    "linebreak-style": "off",
    "lines-around-comment": "off",
    "lines-between-class-members": "off",
    "max-len": "off",
    "max-statements-per-line": "off",
    "multiline-ternary": "off",
    "newline-per-chained-call": "off",
    "no-extra-parens": "off",
    "no-mixed-spaces-and-tabs": "off",
    "no-multi-spaces": "off",
    "no-tabs": "off",
    "no-trailing-spaces": "off",
    "no-whitespace-before-property": "off",
    "nonblock-statement-body-position": "off",
    "object-curly-newline": "off",
    "object-curly-spacing": "off",
    "object-property-newline": "off",
    "operator-linebreak": "off",
    "padded-blocks": "off",
    "quotes": "off",
    "rest-spread-spacing": "off",
    "semi": "off",
    "semi-spacing": "off",
    "semi-style": "off",
    "space-before-blocks": "off",
    "space-before-function-paren": "off",
    "space-in-parens": "off",
    "space-infix-ops": "off",
    "space-unary-ops": "off",
    "switch-colon-spacing": "off",
    "template-curly-spacing": "off",
    "template-tag-spacing": "off",
    "wrap-regex": "off",
    "yield-star-spacing": "off",
    "@typescript-eslint/semi": "off",
    "@babel/semi": "off",
    "canonical/import-specifier-newline": "off",
    "@typescript-eslint/comma-dangle": "off",
    "new-parens": ["off", "never"] // would love
  },
  "overrides": [
    {
      // Functional Components
      "files": ["*/components/**/*.tsx", "*/components/**/*.ts"],
      "rules": {
        "filenames/match-regex": [
          "warn",
          //TODO refine
          "^[A-Za-z][A-Za-z]+(.actions|.config|.utils|.stories|.reducer|.selector|.effects|.test|.thunks)?$"
        ]
      }
    },
    {
      // Class Components
      "files": ["*/components/**/*Class.tsx"],
      "rules": {
        "filenames/match-regex": ["warn", "^[A-Z]{1}[a-zA-Z]+$"],
        "filenames/match-exported": ["error", null, "\\Class$"],
        "fp/no-class": "off",
        "fp/no-this": "off"
      }
    },
    {
      "files": ["*/components/**/*.test.tsx", "*/components/**/*.test.ts"],
      "rules": {
        "filenames/match-regex": ["warn", "^[a-zA-Z]+.test$"], //lower case allowed
        "toplevel/no-toplevel-side-effect": "off",
        "react/jsx-no-bind": "off",
        "max-lines": "off"
      }
    },
    {
      // REDUCER
      "files": ["*/components/**/*.reducer.ts"],
      "rules": {
        "filenames/match-regex": ["warn", "^[a-z][a-zA-Z]+.reducer$"],
        "immutable/no-mutation": "off",
        "no-param-reassign": "off"
      }
    }
  ]
}
